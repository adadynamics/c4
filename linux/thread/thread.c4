@include "linux/thread/native.c4"



fn adl_thread_start(ThreadHandle *handle,fn routine(void *)->void *,void *argument)->i64:
    i64 ret = pthread_create(&handle->thread_id,NULL,routine,argument)
    if ret != 0:
        return -1
    :

    return 0
:


fn adl_thread_detach(ThreadHandle handle)->i64:
    i64 ret = pthread_detach(handle.get_thread_id())
    if ret != 0:
        return -1
    :

    return 0
:


fn adl_thread_join(ThreadHandle handle,void **return_value)->i64:
    i64 ret = pthread_join(handle.get_thread_id(),return_value)
    if ret != 0:
        return -1
    :

    return 0
:


fn adl_thread_exit(void *status)->void:
    return pthread_exit(status)
:


fn adl_get_thread_id(ThreadHandle handle)->i64:
    return handle.get_thread_id()
:

